`timescale 1ns / 1ns

`include "mac.vl"

module thd_unit(
  input signed [31:0] val,
  input signed [31:0] thd,
  output signed out
);
  assign out = val < thd && val > -thd;
endmodule

module mac_aug(
  input signed [15:0] mult1,
  input signed [15:0] mult2,
  input signed [31:0] psum,
  input signed [31:0] thd,
  output signed [31:0] out,
  output within_thd
);
  wire signed [31:0] mult_out;
  mult m0 (mult1, mult2, mult_out); // 16 bit mutltiplier
  add a1 (mult_out, psum, out); // 16 bit adder
  thd_unit t1 (mult_out, thd, within_thd); // thresholder

endmodule